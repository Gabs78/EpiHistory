/*
**  src/Character.cpp
**  Bomberman
**
**  Created by Evan HERVE on 03/05/12.
**  Copyright (c) 2012 EPITECH. All rights reserved.
*/

#include "../inc/Character.hh"

Character::Character(map::map &map, Setting *setting, int nb)
{
  int		i = 0;
  int		j = 0;
  int **	tmp = map.getMap();

  this->choice = nb;
  this->Up = setting->Up;
  this->Down = setting->Down;
  this->Right = setting->Right;
  this->Left = setting->Left;
  //  this->bomb = setting->Bombb;
  this->camera_ = new MenuCamera();
  this->map = map;

  while (tmp[j][i])
    {
      while (tmp[i][j])
	{
	  if (map.getPos(i, j) == 1)
	    {
	      this->position_->x = i;
	      this->position_->y = j;
	      map.setPos(9,i, j);
	      throw ;
	    }
	  i++;
	}
      j++;
      i = 0;
    }
}

Character::~Character()
{}

void Character::initialize()
{
  switch (this->choice){
  case 1:
    this->model_ = gdl::Model::load( "./asserts/anims/bomberman_white_run.FBX");
    break;
  case 2:
    this->model_ = gdl::Model::load( "./asserts/anims/bomberman_black_run.FBX");
    break;
  case 3:
    this->model_ = gdl::Model::load( "./asserts/anims/bomberman_blue_run.FBX");
    break;
  case 4:
    this->model_ = gdl::Model::load( "./asserts/anims/bomberman_red_run.FBX");
    break;
  case 5:
    this->model_ = gdl::Model::load( "./asserts/anims/bomberman_pink_run.FBX");
    break;
  case 6:
    this->model_ = gdl::Model::load( "./asserts/anims/bomberman_gold_run.FBX");
    break;
  }
}
void    Character::movePlayer(gdl::Input &input)
{
  if ((this->alive && input.isKeyDown(this->Down) == true) && ((this->map.getPos(this->getPosX(), this->getPosY() + 1) == map::PLAYER) ||
							       ((this->map.getPos(this->getPosX(), this->getPosY() + 1) >= 5) && ((this->map.getPos(this->getPosX(), this->getPosY() + 1) <= 9)))))
    {
      this->rotation_->y = 0;
      this->map.setPos(9, this->getPosX(), this->getPosY());
      this->setPosY(this->getPosY() + 1);
      checkBonus(this->map.getPos(this->getPosX(), this->getPosY()));
      this->map.setPos(1, this->getPosX(), this->getPosY());
      this->position_->x += 0.18;
    }
  if ((this->alive && input.isKeyDown(this->Up) == true) && ((this->map.getPos(this->getPosX(), this->getPosY() - 1) == map::PLAYER) ||
							     ((this->map.getPos(this->getPosX(), this->getPosY() - 1) >= 5) && ((this->map.getPos(this->getPosX(), this->getPosY() - 1) <= 9)))))
    {
      this->rotation_->y = 180;
      this->map.setPos(9, this->getPosX(), this->getPosY());
      this->setPosY(this->getPosY() - 1);
      checkBonus(this->map.getPos(this->getPosX(), this->getPosY()));
      this->map.setPos(1, this->getPosX(), this->getPosY());
      this->position_->x -= 0.18;
    }
  if ((this->alive && input.isKeyDown(this->Right) == true) && ((this->map.getPos(this->getPosX() + 1, this->getPosY()) == map::PLAYER) ||
								((this->map.getPos(this->getPosX() + 1, this->getPosY()) >= 5) && ((this->map.getPos(this->getPosX() + 1, this->getPosY()) <= 9)))))
    {
      this->rotation_->y = 90;
      this->map.setPos(9, this->getPosX(), this->getPosY());
      this->setPosX(this->getPosX() + 1);
      checkBonus(this->map.getPos(this->getPosX(), this->getPosY()));
      this->map.setPos(1, this->getPosX(), this->getPosY());
      this->position_->z += 0.18;
    }
  if ((this->alive && input.isKeyDown(this->Left) == true) && ((this->map.getPos(this->getPosX() - 1, this->getPosY()) == map::PLAYER) ||
							       ((this->map.getPos(this->getPosX() - 1, this->getPosY()) >= 5) && ((this->map.getPos(this->getPosX() - 1, this->getPosY()) <= 9)))))
    {
      this->rotation_->y = 270;
      this->map.setPos(9, this->getPosX(), this->getPosY());
      this->setPosX(this->getPosX() - 1);
      checkBonus(this->map.getPos(this->getPosX(), this->getPosY()));
      this->map.setPos(1, this->getPosX(), this->getPosY());
      this->position_->z -= 0.18;
    }
  if (this->alive && input.isKeyDown(this->Bombb) == true)
    {
      //Bomb Bomb(this->getPosX(), this->getPosY(), this->_power);
      // this->bomb->explose(map, 1, 0, this->getPosX(), this->getPosY(), this->_power);
      // this->bomb->explose(map, 1, 1, this->getPosX(), this->getPosY(), this->_power);
      // this->bomb->explose(map, -1, 0, this->getPosX(), this->getPosY(), this->_power);
      // this->bomb->explose(map, -1, 1, this->getPosX(), this->getPosY(), this->_power);
    }
}

void    Character::checkBonus(int bloctype)
{
  if (bloctype == 5 || bloctype == 6)
    {
      if (bloctype == 5)
	this->_nbBombs = this->_nbBombs + 1;
      else if (bloctype == 6 && this->_nbBombs > 1)
	this->_nbBombs = this->_nbBombs - 1;
      this->map.setPos(9, this->getPosX(), this->getPosY());
    }
  else if (bloctype == 7 || bloctype == 8)
    {
      if (bloctype == 7)
	this->_power = this->_power + 1;
      else if (bloctype == 8 && this->_power > 2)
	this->_power = this->_power - 1;
      this->map.setPos(9, this->getPosX(), this->getPosY());
    }
}
