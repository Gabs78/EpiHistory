<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>GDL-GL: gdl::Model Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!-- Generated by Doxygen 1.6.2-20100208 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="main.html"><span>Main&nbsp;Page</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.html"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.html"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.html"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><b>gdl</b>::<a class="el" href="classgdl_1_1Model.html">Model</a>
  </div>
</div>
<div class="contents">
<h1>gdl::Model Class Reference</h1><!-- doxytag: class="gdl::Model" --><!-- doxytag: inherits="Resource&lt; ModelImpl &gt;" -->
<p><code>#include &lt;<a class="el" href="Model_8hpp_source.html">Model.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for gdl::Model:</div>
<div class="dynsection">
 <div class="center">
  <img src="classgdl_1_1Model.png" usemap="#gdl::Model_map" alt=""/>
  <map id="gdl::Model_map" name="gdl::Model_map">
<area href="classgdl_1_1Resource.html" alt="gdl::Resource&lt; ModelImpl &gt;" shape="rect" coords="0,0,170,24"/>
</map>
 </div>
</div>

<p><a href="classgdl_1_1Model-members.html">List of all members.</a></p>
<table border="0" cellpadding="0" cellspacing="0">
<tr><td colspan="2"><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgdl_1_1Model.html#a48d0cb59ef4926b95b1a4504d6b6fbe0">Model</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgdl_1_1Model.html#a76ba0ddf7db67016d0a72f0c22febca4">~Model</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgdl_1_1Model.html#a9e5a520c27759a0913010e88262f87d0">update</a> (<a class="el" href="classgdl_1_1IClock.html">IClock</a> const &amp;gameTime)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgdl_1_1Model.html#af8cbb946c57ab177273521bb3c127fb4">draw</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgdl_1_1Model.html#a4835d0ce38b458dc0b378f4a025c5a09">draw_pose</a> (int pose_id)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgdl_1_1Model.html#ae767b95441e66f3c5e8f06efd6f785fe">infos</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgdl_1_1Model.html#abd7249531d6433c6a8c0970f931b16e6">play</a> (std::string const &amp;_name, char state=Anim::RUN)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgdl_1_1Model.html#a5046ca0821ca4c5a6a6ec33c51b41903">animation_hasStarted</a> (std::string const &amp;name) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgdl_1_1Model.html#a3fcf22fc2e37057fe047c3841d30c88b">anim_is_ended</a> (std::string const &amp;name) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgdl_1_1Model.html#a565112440d65142e71911e60cdb223bb">stop_animation</a> (std::string const &amp;name)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgdl_1_1Model.html#a5ccf274812bacb19062d4051fbe44b57">get_anim_speed</a> (std::string const &amp;name) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgdl_1_1Model.html#a97d6d0d3f9e6df95e20caf26e769bea4">get_anim_blendfactor</a> (std::string const &amp;name) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">char&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgdl_1_1Model.html#a5cb4cfea0c7f0819d0749baddd682f98">get_anim_state</a> (std::string const &amp;name) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgdl_1_1Model.html#a0cbcdc21c1962e7230fcba6b063b119a">set_anim_bendfactor</a> (std::string const &amp;name, double blendFactor)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgdl_1_1Model.html#abebb3405288cef12250671957cda4925">set_anim_speed</a> (std::string const &amp;name, double speed)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structgdl_1_1Color.html">Color</a> const &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgdl_1_1Model.html#a8bbdffaebc6ef023b84d609d9f00a43e">get_default_model_color</a> (void) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgdl_1_1Model.html#a5fe9cd2cbfe7a993505528832cdc0604">set_default_model_color</a> (<a class="el" href="structgdl_1_1Color.html">Color</a> const &amp;color)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgdl_1_1Model.html#a7239d032a682d61fcf69194e34461102">set_anim_state</a> (std::string const &amp;name, char state)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgdl_1_1Model.html#a2bf37d490e0dd0906d4ee7d74aca5df3">add_anim_state</a> (std::string const &amp;name, Anim::AnimStates state)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgdl_1_1Model.html#af32a30b8fc163e1dc9d1a78eff49f2ea">remove_anim_state</a> (std::string const &amp;name, Anim::AnimStates state)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::string &gt; const &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgdl_1_1Model.html#accd5847c295adfc7cebcd2283ee2bfdf">get_stackanimation_names</a> (void) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::string &gt; const &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgdl_1_1Model.html#a7f09fd45a42fd3314e320c0b969ab2bc">get_animation_names</a> (void) const </td></tr>
<tr><td colspan="2"><h2>Static Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classgdl_1_1Model.html">Model</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgdl_1_1Model.html#a6f9c70f0e5b0b0c640d739a4fd1249cd">load</a> (std::string const &amp;filename)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgdl_1_1Model.html#ad477ab8d1ffe487499886170a1b0d949">cut_animation</a> (<a class="el" href="classgdl_1_1Model.html">Model</a> &amp;_model, std::string const &amp;stackAnim, int id_start, int id_end, std::string const &amp;_newName)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgdl_1_1Model.html#ae1ede142757404fb1869c62c682bc48b">Begin</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgdl_1_1Model.html#a65b3733d5447e12316befa7a28eeadd7">End</a> (void)</td></tr>
<tr><td colspan="2"><h2>Friends</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgdl_1_1Model.html#afb81d2077780e342b8fd3654cabc4c19">ModelImpl</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgdl_1_1Model.html#a7afc1a807b9064f725fdcdce33639acb">ResourceManagerImpl</a></td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>The ModelImpl class provide the gestion of your model. </p>
<hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a48d0cb59ef4926b95b1a4504d6b6fbe0"></a><!-- doxytag: member="gdl::Model::Model" ref="a48d0cb59ef4926b95b1a4504d6b6fbe0" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">gdl::Model::Model </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Default constructror. </p>

</div>
</div>
<a class="anchor" id="a76ba0ddf7db67016d0a72f0c22febca4"></a><!-- doxytag: member="gdl::Model::~Model" ref="a76ba0ddf7db67016d0a72f0c22febca4" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">gdl::Model::~Model </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Default destructror. </p>

</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a2bf37d490e0dd0906d4ee7d74aca5df3"></a><!-- doxytag: member="gdl::Model::add_anim_state" ref="a2bf37d490e0dd0906d4ee7d74aca5df3" args="(std::string const &amp;name, Anim::AnimStates state)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gdl::Model::add_anim_state </td>
          <td>(</td>
          <td class="paramtype">std::string const &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Anim::AnimStates&nbsp;</td>
          <td class="paramname"> <em>state</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Add an animation state.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>name</em>&nbsp;</td><td>Animation name. </td></tr>
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>state</em>&nbsp;</td><td>(in Anim namespace). </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a3fcf22fc2e37057fe047c3841d30c88b"></a><!-- doxytag: member="gdl::Model::anim_is_ended" ref="a3fcf22fc2e37057fe047c3841d30c88b" args="(std::string const &amp;name) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool gdl::Model::anim_is_ended </td>
          <td>(</td>
          <td class="paramtype">std::string const &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Check if the animation is ended.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>name</em>&nbsp;</td><td>Animation name. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>If the animation has ended, true is returned. Otherwise, false is returned. </dd></dl>

</div>
</div>
<a class="anchor" id="a5046ca0821ca4c5a6a6ec33c51b41903"></a><!-- doxytag: member="gdl::Model::animation_hasStarted" ref="a5046ca0821ca4c5a6a6ec33c51b41903" args="(std::string const &amp;name) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool gdl::Model::animation_hasStarted </td>
          <td>(</td>
          <td class="paramtype">std::string const &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Check if the animation has started.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>name</em>&nbsp;</td><td>Animation name. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>If successful, true is returned. Otherwise, false is returned. </dd></dl>

</div>
</div>
<a class="anchor" id="ae1ede142757404fb1869c62c682bc48b"></a><!-- doxytag: member="gdl::Model::Begin" ref="ae1ede142757404fb1869c62c682bc48b" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gdl::Model::Begin </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Open the scope to draw models. </p>

</div>
</div>
<a class="anchor" id="ad477ab8d1ffe487499886170a1b0d949"></a><!-- doxytag: member="gdl::Model::cut_animation" ref="ad477ab8d1ffe487499886170a1b0d949" args="(Model &amp;_model, std::string const &amp;stackAnim, int id_start, int id_end, std::string const &amp;_newName)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool gdl::Model::cut_animation </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classgdl_1_1Model.html">Model</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>_model</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string const &amp;&nbsp;</td>
          <td class="paramname"> <em>stackAnim</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>id_start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>id_end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string const &amp;&nbsp;</td>
          <td class="paramname"> <em>_newName</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Cut the animation.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>_model</em>&nbsp;</td><td>The model. </td></tr>
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>stackAnim</em>&nbsp;</td><td>The animations stack. </td></tr>
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>id_start</em>&nbsp;</td><td>First id. </td></tr>
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>id_end</em>&nbsp;</td><td>Last id. </td></tr>
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>_newName</em>&nbsp;</td><td>Name of the new animation. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>If successfull, true is returned. Otherwise, false is returned. </dd></dl>

</div>
</div>
<a class="anchor" id="af8cbb946c57ab177273521bb3c127fb4"></a><!-- doxytag: member="gdl::Model::draw" ref="af8cbb946c57ab177273521bb3c127fb4" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gdl::Model::draw </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Draw the model in the <a class="el" href="classgdl_1_1Window.html">Window</a>. </p>

</div>
</div>
<a class="anchor" id="a4835d0ce38b458dc0b378f4a025c5a09"></a><!-- doxytag: member="gdl::Model::draw_pose" ref="a4835d0ce38b458dc0b378f4a025c5a09" args="(int pose_id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gdl::Model::draw_pose </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>pose_id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Draw the model in a specific pose.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>pose_id</em>&nbsp;</td><td>ID of the specific pose. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a65b3733d5447e12316befa7a28eeadd7"></a><!-- doxytag: member="gdl::Model::End" ref="a65b3733d5447e12316befa7a28eeadd7" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gdl::Model::End </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Close the scope to draw models. </p>

</div>
</div>
<a class="anchor" id="a97d6d0d3f9e6df95e20caf26e769bea4"></a><!-- doxytag: member="gdl::Model::get_anim_blendfactor" ref="a97d6d0d3f9e6df95e20caf26e769bea4" args="(std::string const &amp;name) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double gdl::Model::get_anim_blendfactor </td>
          <td>(</td>
          <td class="paramtype">std::string const &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get the blend factor.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>name</em>&nbsp;</td><td>Animation name. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>If the animation doesn't exist, -1 is returned. </dd></dl>

</div>
</div>
<a class="anchor" id="a5ccf274812bacb19062d4051fbe44b57"></a><!-- doxytag: member="gdl::Model::get_anim_speed" ref="a5ccf274812bacb19062d4051fbe44b57" args="(std::string const &amp;name) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double gdl::Model::get_anim_speed </td>
          <td>(</td>
          <td class="paramtype">std::string const &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get the animation speed.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>name</em>&nbsp;</td><td>Animation name. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>If the animation doesn't exist, -1 is returned. </dd></dl>

</div>
</div>
<a class="anchor" id="a5cb4cfea0c7f0819d0749baddd682f98"></a><!-- doxytag: member="gdl::Model::get_anim_state" ref="a5cb4cfea0c7f0819d0749baddd682f98" args="(std::string const &amp;name) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char gdl::Model::get_anim_state </td>
          <td>(</td>
          <td class="paramtype">std::string const &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get the anim state.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>name</em>&nbsp;</td><td>Animation name. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>If the animation doesn't exist, -1 is returned. </dd></dl>

</div>
</div>
<a class="anchor" id="a7f09fd45a42fd3314e320c0b969ab2bc"></a><!-- doxytag: member="gdl::Model::get_animation_names" ref="a7f09fd45a42fd3314e320c0b969ab2bc" args="(void) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; std::string &gt; const &amp; gdl::Model::get_animation_names </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get the animation's name.</p>
<dl class="return"><dt><b>Returns:</b></dt><dd>Vector of strings. </dd></dl>

</div>
</div>
<a class="anchor" id="a8bbdffaebc6ef023b84d609d9f00a43e"></a><!-- doxytag: member="gdl::Model::get_default_model_color" ref="a8bbdffaebc6ef023b84d609d9f00a43e" args="(void) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structgdl_1_1Color.html">Color</a> &amp; gdl::Model::get_default_model_color </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get the default model color.</p>
<dl class="return"><dt><b>Returns:</b></dt><dd>The default color. </dd></dl>

</div>
</div>
<a class="anchor" id="accd5847c295adfc7cebcd2283ee2bfdf"></a><!-- doxytag: member="gdl::Model::get_stackanimation_names" ref="accd5847c295adfc7cebcd2283ee2bfdf" args="(void) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; std::string &gt; const &amp; gdl::Model::get_stackanimation_names </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get the stack of the animation's name.</p>
<dl class="return"><dt><b>Returns:</b></dt><dd>Vector of strings. </dd></dl>

</div>
</div>
<a class="anchor" id="ae767b95441e66f3c5e8f06efd6f785fe"></a><!-- doxytag: member="gdl::Model::infos" ref="ae767b95441e66f3c5e8f06efd6f785fe" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gdl::Model::infos </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Do nothing. Have to display informations about the <a class="el" href="classgdl_1_1Model.html">Model</a> like stack anime number, vertices number... </p>

</div>
</div>
<a class="anchor" id="a6f9c70f0e5b0b0c640d739a4fd1249cd"></a><!-- doxytag: member="gdl::Model::load" ref="a6f9c70f0e5b0b0c640d739a4fd1249cd" args="(std::string const &amp;filename)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgdl_1_1Model.html">Model</a> gdl::Model::load </td>
          <td>(</td>
          <td class="paramtype">std::string const &amp;&nbsp;</td>
          <td class="paramname"> <em>filename</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Load the model.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>filename</em>&nbsp;</td><td>Filename with the extension. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>the <a class="el" href="classgdl_1_1Model.html">Model</a>. </dd></dl>

</div>
</div>
<a class="anchor" id="abd7249531d6433c6a8c0970f931b16e6"></a><!-- doxytag: member="gdl::Model::play" ref="abd7249531d6433c6a8c0970f931b16e6" args="(std::string const &amp;_name, char state=Anim::RUN)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool gdl::Model::play </td>
          <td>(</td>
          <td class="paramtype">std::string const &amp;&nbsp;</td>
          <td class="paramname"> <em>_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&nbsp;</td>
          <td class="paramname"> <em>state</em> = <code>Anim::RUN</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Play the animation.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>_name</em>&nbsp;</td><td>Animation name. </td></tr>
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>state</em>&nbsp;</td><td>(AnimState enum). </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>If successful, true is returned. Otherwise, false is returned. </dd></dl>

</div>
</div>
<a class="anchor" id="af32a30b8fc163e1dc9d1a78eff49f2ea"></a><!-- doxytag: member="gdl::Model::remove_anim_state" ref="af32a30b8fc163e1dc9d1a78eff49f2ea" args="(std::string const &amp;name, Anim::AnimStates state)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gdl::Model::remove_anim_state </td>
          <td>(</td>
          <td class="paramtype">std::string const &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Anim::AnimStates&nbsp;</td>
          <td class="paramname"> <em>state</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Remove an animation state.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>name</em>&nbsp;</td><td>Animation name. </td></tr>
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>state</em>&nbsp;</td><td>(in Anim namespace). </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a0cbcdc21c1962e7230fcba6b063b119a"></a><!-- doxytag: member="gdl::Model::set_anim_bendfactor" ref="a0cbcdc21c1962e7230fcba6b063b119a" args="(std::string const &amp;name, double blendFactor)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gdl::Model::set_anim_bendfactor </td>
          <td>(</td>
          <td class="paramtype">std::string const &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>blendFactor</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Set the blend factor.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>name</em>&nbsp;</td><td>Animation name. </td></tr>
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>blendFactor</em>&nbsp;</td><td>Blend factor. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="abebb3405288cef12250671957cda4925"></a><!-- doxytag: member="gdl::Model::set_anim_speed" ref="abebb3405288cef12250671957cda4925" args="(std::string const &amp;name, double speed)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gdl::Model::set_anim_speed </td>
          <td>(</td>
          <td class="paramtype">std::string const &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>speed</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Set the animation speed.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>name</em>&nbsp;</td><td>Animation name. </td></tr>
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>speed</em>&nbsp;</td><td>Speed of the animation. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a7239d032a682d61fcf69194e34461102"></a><!-- doxytag: member="gdl::Model::set_anim_state" ref="a7239d032a682d61fcf69194e34461102" args="(std::string const &amp;name, char state)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gdl::Model::set_anim_state </td>
          <td>(</td>
          <td class="paramtype">std::string const &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&nbsp;</td>
          <td class="paramname"> <em>state</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Set the anim state.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>name</em>&nbsp;</td><td>Animation name. </td></tr>
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>state</em>&nbsp;</td><td>(with AnimState enum). </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a5fe9cd2cbfe7a993505528832cdc0604"></a><!-- doxytag: member="gdl::Model::set_default_model_color" ref="a5fe9cd2cbfe7a993505528832cdc0604" args="(Color const &amp;color)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gdl::Model::set_default_model_color </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structgdl_1_1Color.html">Color</a> const &amp;&nbsp;</td>
          <td class="paramname"> <em>color</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Set the default model color.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>color</em>&nbsp;</td><td>The default color. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a565112440d65142e71911e60cdb223bb"></a><!-- doxytag: member="gdl::Model::stop_animation" ref="a565112440d65142e71911e60cdb223bb" args="(std::string const &amp;name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gdl::Model::stop_animation </td>
          <td>(</td>
          <td class="paramtype">std::string const &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Stop the animation.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>name</em>&nbsp;</td><td>Animation name. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a9e5a520c27759a0913010e88262f87d0"></a><!-- doxytag: member="gdl::Model::update" ref="a9e5a520c27759a0913010e88262f87d0" args="(IClock const &amp;gameTime)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gdl::Model::update </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classgdl_1_1IClock.html">IClock</a> const &amp;&nbsp;</td>
          <td class="paramname"> <em>gameTime</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Update the animation of the model.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>gameTime</em>&nbsp;</td><td>Game's clock. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/><h2>Friends And Related Function Documentation</h2>
<a class="anchor" id="afb81d2077780e342b8fd3654cabc4c19"></a><!-- doxytag: member="gdl::Model::ModelImpl" ref="afb81d2077780e342b8fd3654cabc4c19" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">friend class ModelImpl<code> [friend]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>To reach private members of ModelImpl. </p>

</div>
</div>
<a class="anchor" id="a7afc1a807b9064f725fdcdce33639acb"></a><!-- doxytag: member="gdl::Model::ResourceManagerImpl" ref="a7afc1a807b9064f725fdcdce33639acb" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">friend class ResourceManagerImpl<code> [friend]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>To reach private members of ResourceManagerImpl. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="Model_8hpp_source.html">Model.hpp</a></li>
<li>Model.cpp</li>
</ul>
</div>
<hr class="footer"/><address style="text-align: right;"><small>Generated on 16 May 2011 for GDL-GL by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.2-20100208 </small></address>
</body>
</html>
